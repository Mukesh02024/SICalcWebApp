


@model SICalcWebApp.Areas.RiceMill.VM.HmaliSearchViewModel

<div class="card shadow-sm">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h2 class="h4 mb-0" >Hamali Summary Report</h2>
        @if (Model.GroupedSummary != null && Model.GroupedSummary.Any())
        {
            <button id="printButton" class="btn btn-light btn-sm">
                <i class="fas fa-print me-2"></i>Print
            </button>
        }
    </div>

    <div class="card-body">
        <!-- Search Form -->
        <form asp-action="PivotSummary" method="get" class="mb-4">
            <div class="row g-3 align-items-center">
                <div class="col-lg-4 col-md-6 mb-3">
                    <label for="fromDate" class="form-label">From Date:</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                        <input type="date" name="fromDate" id="fromDate" class="form-control"
                               value="@Model.FromDate.ToString("yyyy-MM-dd")" required />
                    </div>
                </div>
                <div class="col-lg-4 col-md-6 mb-3">
                    <label for="toDate" class="form-label">To Date:</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                        <input type="date" name="toDate" id="toDate" class="form-control"
                               value="@Model.ToDate.ToString("yyyy-MM-dd")" required />
                    </div>
                </div>
                <div class="col-lg-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-search me-2"></i>Search
                    </button>
                </div>
            </div>
        </form>

        <div id="printableArea">
            @if (Model.GroupedSummary != null && Model.GroupedSummary.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover table-bordered ">
                        <thead class="table-dark " style="background-color:black">
                            <tr style="background-color:black">
                                <th style="width: 60%; background-color:black" >Group Name / Item Name</th>
                                <th class="text-end text-center align-middle" style="width: 20%">Sum of Total Cost</th>
                                <th class="text-end text-center align-middle" style="width: 20%">Total Quantity</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var group in Model.GroupedSummary)
                            {
                                var sanitizedGroupKey = group.Key.Replace(" ", "-").Replace(".", "").Replace(",", "");
                                <!-- Group Row -->
                                <tr class="group-header">
                                    <td style="width: 60%">
                                        <button type="button" class="btn btn-dark toggle-button text-decoration-none"
                                                data-target="#group-@sanitizedGroupKey">
                                            <i class="fas fa-chevron-right toggle-icon me-2"></i>
                                            <strong>@group.Key</strong>
                                        </button>
                                    </td>
                                    <td class="text-end text-center align-middle" style="width: 20%">
                                        <strong>@group.Value.Sum(i => i.Value).ToString("N2")</strong>
                                    </td>
                                    <td class="text-end text-center align-middle" style="width: 20%">
                                        <strong>@Model.GroupedQuantities[group.Key].Sum(q => q.Value).ToString("N2")</strong>
                                    </td>
                                </tr>
                                <!-- Items under the group -->
                                <tr id="group-@sanitizedGroupKey" class="group-items" style="display:none;">
                                    <td colspan="3" class="p-0">
                                        <table class="table table-sm mb-0 table-striped ">
                                            @foreach (var item in group.Value)
                                            {
                                                <tr>
                                                    <td style="width: 60%">@item.Key</td>
                                                    <td class="text-end text-center align-middle" style="width: 20% ">@item.Value.ToString("N2")</td>
                                                    <td class="text-end text-center align-middle" style="width: 20%">@Model.GroupedQuantities[group.Key][item.Key].ToString("N2")</td>
                                                </tr>
                                            }
                                        </table>
                                    </td>
                                </tr>
                            }


                            <tr class="group-header" style="background-color:powderblue">
                                <td style="width: 60%">

                                    <h5 class="mb-2">Grand Total</h5>

                                </td>
                                <td class="text-end text-center align-middle" style="width: 20%">


                                    <h4 class="mb-0  text-center align-middle "> <strong>  @Model.GrandTotal.ToString("N2") </strong></h4>
                                   
                                

                                <td class="text-end" style="width: 20%">

                                    <h4 class="mb-0  text-center align-middle"> <strong>@Model.GrandTotalQuantity.ToString("N2")</strong></h4>

                                </td>
                            </tr>



                        </tbody>
                    </table>
                </div>

               
            }
            else
            {
                <div class="alert alert-info text-center">
                    <i class="fas fa-info-circle me-2"></i>No data found for the selected date range.
                </div>
            }
        </div>
    </div>

    <script>


          $(document).ready(function () {
        $('.toggle-button').click(function () {
            var $this = $(this);
            var target = $this.data('target');
            var icon = $this.find('.toggle-icon');

            // Toggle the visibility of the target row
            $(target).slideToggle(200);
            $this.toggleClass('active');

            // Update the icon direction
            if (icon.hasClass('fa-chevron-right')) {
                icon.removeClass('fa-chevron-right').addClass('fa-chevron-down');
            } else {
                icon.removeClass('fa-chevron-down').addClass('fa-chevron-right');
            }

            // Store the state in localStorage
            localStorage.setItem(target, $(target).is(':visible') ? 'show' : 'hide');
        });

        // Restore state from localStorage
        $('.toggle-button').each(function () {
            var $this = $(this);
            var target = $this.data('target');
            var icon = $this.find('.toggle-icon');
            var state = localStorage.getItem(target);

            if (state === 'show') {
                $(target).show();
                $this.addClass('active');
                icon.removeClass('fa-chevron-right').addClass('fa-chevron-down');
            } else {
                icon.removeClass('fa-chevron-down').addClass('fa-chevron-right');
            }
        });





            $('#printButton').click(function () {
                var printContents = $('#printableArea').html();
                var dateRange = `<div class="text-center"><h4> Hamali Summary Report From: @Model.FromDate.ToString("yyyy-MM-dd") To: @Model.ToDate.ToString("yyyy-MM-dd")</h4></div>`;
                printContents = dateRange + printContents;

                var originalContents = document.body.innerHTML;
                document.body.innerHTML = printContents;
                window.print();
                document.body.innerHTML = originalContents;
                location.reload();
            });
        });
    </script>
</div>
